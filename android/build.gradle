plugins {
	id 'com.gladed.androidgitversion' version '0.4.5'
}
apply plugin: 'com.android.application'

androidGitVersion {
	codeFormat = "MNPPBBBB"
	format = "%tag%%-count%%-branch%%-dirty%"
	prefix = "v"  // Only tags beginning with v are considered.
	untrackedIsDirty = false
}

android {
	flavorDimensions "variant"

	signingConfigs {
		debug {
			storeFile file("debug.keystore")
		}
		optimized {
			storeFile file("debug.keystore")
		}

		release {
			keyAlias 'bboo-release-key'
			keyPassword 'zhangwei'
			storeFile file('D:/Android/android-sign-key/bboo-release-key.jks')
			storePassword 'zhangwei'
		}
	}
	compileSdkVersion 28
	buildToolsVersion '28.0.3'
	defaultConfig {
		applicationId 'org.ppsspp.ppsspp'
		if (androidGitVersion.name() != "unknown" && androidGitVersion.code() >= 14000000) {
			// Start using automatic Android version numbers from version 1.4.
			println "Overriding Android Version Name, Code: " + androidGitVersion.name() + " " + androidGitVersion.code();
			versionName androidGitVersion.name()
			versionCode androidGitVersion.code()
		} else {
			println "(not using these:) Android Version Name, Code: " + androidGitVersion.name() + " " + androidGitVersion.code();
		}

		new File("versionname.txt").write(androidGitVersion.name())
		new File("versioncode.txt").write(androidGitVersion.code().toString())

		minSdkVersion 24
		targetSdkVersion 28
		if (project.hasProperty("ANDROID_VERSION_CODE") && project.hasProperty("ANDROID_VERSION_NAME")) {
			versionCode ANDROID_VERSION_CODE
			versionName ANDROID_VERSION_NAME
		}
		signingConfig signingConfigs.debug
	}
	buildTypes {
		debug {
			minifyEnabled = false
			jniDebuggable true
			signingConfig signingConfigs.debug
		}
		optimized {
			// Debug signed but optimized.
			minifyEnabled = false
			signingConfig android.buildTypes.debug.signingConfig
		}
		release {
			minifyEnabled = false
			signingConfig signingConfigs.release
		}
	}

	sourceSets {
		main {
			manifest.srcFile 'AndroidManifest.xml'
			res.srcDirs = ['res']
			java.srcDirs = ['src']
			aidl.srcDirs = ['src']
			resources.srcDirs = ['src']
			assets.srcDirs = [
					'../assets',
			]
			//jni.srcDirs = ['..']
			jniLibs.srcDirs = ['libs']
		}
		gold {
			res.srcDirs = ['gold/res']
		}
	}
	productFlavors {
		normal {
			applicationId 'org.ppsspp.ppsspp'
			dimension "variant"
		}
		gold {
			applicationId 'org.ppsspp.ppssppgold'
			dimension "variant"
		}
	}
	variantFilter { variant ->
		def needed = variant.name in [
			'normalDebug',		// for debugging
			'normalOptimized',	// for testing
			'normalRelease',	// for Google Play releases
			'goldRelease'		// for Google Play releases
		]
		variant.setIgnore(!needed)
	}
}
afterEvaluate {
	android.sourceSets.main.assets.getSrcDirs().each { println it }
}
dependencies {
	implementation files('libs/com.bda.controller.jar')
}
